pipeline {
    agent {
        label "azure"
    
    }
    environment{
        LOGIN_SERVER = "cmplr.azurecr.io"
    }
    stages {
        stage("fetch"){
            steps{
                echo "========Executing Fetch========"
                git branch: "prod", url: "https://CMPLR-Technologies@dev.azure.com/CMPLR-Technologies/CMPLR-Technologies.Frontend/_git/CMPLR-Technologies.Frontend"
            }
            post{
                success{
                    echo "=======fetch executed successfully========"
                    echo "==========Copy ssl certificate==========="
                    sh"""
                    cp ~/nginx/nginx.key ./nginx/nginx.key
                    cp ~/nginx/nginx-certificate.crt ./nginx/nginx-certificate.crt
                    """
                }
                failure{
                    echo "========fetch execution failed========"
                    //slackSend (color:"#FF0000", message: "Failed to pull code-base from github")
                    
                }
            }
        }
        stage('docker build') {
            steps {
                echo "========docker build ========"
                sh """
                    docker build -t $LOGIN_SERVER/frontend:latest .
                """    
            }
            post {
                success {
                    echo "========docker build success ========"
                    //slackSend (color:"#00FF00", message: "Master: Building Image success")
                }
                failure {
                    echo "========docker build failed========"
                    //slackSend (color:"#FF0000", message: "Master: Building Image failure")
                }
           }
        }
        
        
        stage('push image') {
            steps {
                echo "======== Pushing image to registry ========="
                
                withCredentials([usernamePassword(credentialsId: 'ACR', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) 
                {
                    sh """
                docker login ${LOGIN_SERVER} -u ${USERNAME}  -p ${PASSWORD}
                docker push ${LOGIN_SERVER}/frontend:latest
                """
                }
            }
            post {
                success {
                    echo "======== Pushing image to registry was successful ========="
                    //slackSend (color:"#00FF00", message: "Master: pushing image success")
                }
                failure {
                    echo "======== Failed to Pushing image to registry ========="
                    //slackSend (color:"#FF0000", message: "Master: pushing image failure")
                }
           }
        }

    }
}